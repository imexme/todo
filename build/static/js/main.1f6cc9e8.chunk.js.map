{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","liked","allPosts","className","SearchPanel","props","state","term","onUpdateSearch","bind","e","target","value","this","setState","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","map","filter","onFilterSelect","clazz","onClick","PostListItem","onDelete","onToggleImportant","onToggleLiked","like","classNames","important","PostList","posts","elements","item","id","itemProps","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","App","data","deleteItem","addItem","maxId","index","findIndex","elem","slice","body","newItem","old","items","length","indexOf","visiblePosts","filterPost","searchPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f6cc9e8.chunk.js","sourcesContent":["import AppHeader from './app-header';\nexport default AppHeader;","import React from 'react';\n\nimport './app-header.css'\n\nconst AppHeader = ({ liked, allPosts }) => {\n    return (\n        <div className=\"app-header d-flex\">\n            <h1>Dima L</h1>\n            <h2>{allPosts} items, of them liked {liked}</h2>\n        </div>\n    )\n}\n\nexport default AppHeader;","import SearchPanel from './search-panel';\nexport default SearchPanel;","import React, { Component } from 'react';\n\nimport './search-panel.css'\n\nexport default class SearchPanel extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            term: ''\n        }\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\n    }\n    onUpdateSearch(e) {\n        const term = e.target.value;\n        this.setState({ term });\n        this.props.onUpdateSearch(term);\n    }\n    render() {\n        return (\n            <input\n                className=\"form-control search-input\"\n                type=\"text\"\n                placeholder=\"Search in the list\"\n                value={this.state.term}\n                onChange={this.onUpdateSearch}\n            />\n        )\n    }\n}\n","import PostStatusFilter from './post-status-filter';\nexport default PostStatusFilter;","import React, { Component } from 'react';\n\nimport './post-status-filter.css';\n\n\nexport default class PostStatusFilter extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.buttons = [\n\t\t\t{ name: 'all', label: 'All' },\n\t\t\t{ name: 'like', label: 'Liked' }\n\t\t];\n\t}\n\trender() {\n\n\t\tconst buttons = this.buttons.map(({ name, label }) => {\n\t\t\tconst { filter, onFilterSelect } = this.props;\n\t\t\tconst active = filter === name;\n\t\t\tconst clazz = active ? 'btn-info' : 'btn-outline-secondary'\n\t\t\treturn (\n\t\t\t\t<button type='button'\n\t\t\t\t\tclassName={`btn ${clazz}`}\n\t\t\t\t\tkey={name}\n\t\t\t\t\tonClick={() => onFilterSelect(name)}>\n\t\t\t\t\t{label}</button>\n\t\t\t)\n\t\t});\n\n\t\treturn (\n\t\t\t<div className=\"btn-group\">\n\t\t\t\t{buttons}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n","import PostListItem from './post-list-item';\nexport default PostListItem;","import React, {Component} from 'react';\n\nimport './post-list-item.css'\n\nexport default class PostListItem extends Component {\n\n    render() {\n        const {label, onDelete, onToggleImportant, onToggleLiked, like, important} = this.props;\n        let classNames = 'app-list-item d-flex justify-content-between';\n\n        if (important) {\n            classNames +=' important';\n        }\n\n        if (like) {\n            classNames +=' like';\n        }\n\n        return (\n            <div className={classNames}>\n                <span \n                className=\"app-list-item-label\"\n                onClick={onToggleLiked}>\n                    {label}\n                </span>\n                <div className=\"d-flex justify-content-center align-items-center\">\n                    <button \n                    type=\"button\" \n                    className=\"btn-star btn-sm\"\n                    onClick={onToggleImportant}>\n                        <i className=\"fa fa-star\"></i>\n                    </button>\n                    <button \n                    type=\"button\" \n                    className=\"btn-trash btn-sm\"\n                    onClick={onDelete}>\n                        <i className=\"fa fa-trash-o\"></i>\n                    </button>\n                    <i className=\"fa fa-heart\"></i>\n                </div>\n            </div>\n        )\n        }\n}\n","import PostList from './post-list';\nexport default PostList;","import React from 'react';\n\nimport PostListItem from '../post-list-item';\nimport './post-list.css';\n\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLiked}) => {\n\n    const elements = posts.map((item) => {\n        const {id, ...itemProps} = item;\n        return (\n            <li key={id} className='list-group-item'>\n                <PostListItem \n                    {...itemProps}\n                    onDelete={() => onDelete(id)}\n                    onToggleImportant={() => onToggleImportant(id)}\n                    onToggleLiked={() => onToggleLiked(id)}/>\n            </li>\n        )\n    });\n\n    return (\n        <ul className=\"app-list list-group\">\n            {elements}\n        </ul>\n    )\n}\n\nexport default PostList;","import PostAddForm from './post-add-form';\nexport default PostAddForm;","import React, { Component } from 'react';\n\nimport './post-add-form.css'\n\nexport default class PostAddForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: ''\n        };\n        this.onValueChange = this.onValueChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    onValueChange(e) {\n        this.setState({\n            text: e.target.value\n        });\n    }\n    onSubmit(e) {\n        e.preventDefault();\n        this.props.onAdd(this.state.text);\n        this.setState({\n            text: ''\n        });\n    }\n    render() {\n        return (\n            <form\n                className=\"bottom-panel d-flex\"\n                onSubmit={this.onSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"What to add?\"\n                    className=\"form-control new-post-label\"\n                    onChange={this.onValueChange}\n                    value={this.state.text}\n                />\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-secondary\">\n                    ADD\n                    </button>\n            </form>\n        )\n    }\n}\n","import App from './app'\nexport default App;","import React, {Component} from 'react';\n\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport PostStatusFilter from '../post-status-filter';\nimport PostList from '../post-list';\nimport PostAddForm from '../post-add-form';\n\nimport './app.css';\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data : [\n                {label: 'Going to learn React', important: true, like: false, id: 1},\n                {label: 'That is so good', important: false, like: false, id: 2},\n                {label: 'I need a break...', important: false, like: false, id: 3}\n            ],\n            term: '',\n            filter: 'all'\n        };\n        this.deleteItem = this.deleteItem.bind(this);\n        this.addItem = this.addItem.bind(this);\n        this.onToggleImportant = this.onToggleImportant.bind(this);\n        this.onToggleLiked = this.onToggleLiked.bind(this);\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\n        this.onFilterSelect = this.onFilterSelect.bind(this);\n        this.maxId = 4;\n    }\n\n    deleteItem(id) {\n        this.setState(({data}) => {\n            const index = data.findIndex(elem => elem.id === id);\n\n            const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\n\n            return {\n                data: newArr\n            }\n        });\n    }\n\n    addItem(body) {\n        const newItem = {\n            label: body,\n            important: false,\n            id: this.maxId++\n        }\n        this.setState(({data}) => {\n            const newArr = [...data, newItem];\n            return {\n                data: newArr\n            }\n        })\n    }\n\n    onToggleImportant(id) {\n        this.setState(({data}) => {\n            const index = data.findIndex(elem => elem.id === id);\n\n            const old = data[index];\n            const newItem = {...old, important: !old.important};\n\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n            return {\n                data: newArr\n            }\n        }); \n    }\n\n    onToggleLiked(id) {\n        this.setState(({data}) => {\n            const index = data.findIndex(elem => elem.id === id);\n\n            const old = data[index];\n            const newItem = {...old, like: !old.like};\n\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n            return {\n                data: newArr\n            }\n        }); \n    }\n\n    searchPost(items, term) {\n        if (term.length === 0) {\n            return items\n        }\n\n        return items.filter((item) => {\n            return item.label.indexOf(term) > -1\n        });\n    }\n\n    filterPost(items, filter) {\n        if (filter === 'like') {\n            return items.filter(item => item.like)\n        } else {\n            return items\n        }\n    }\n\n    onUpdateSearch(term) {\n        this.setState({term})\n    }\n    \n    onFilterSelect(filter){\n        this.setState({filter})\n    }\n\n    render() {\n        const {data, term, filter} = this.state;\n\n        const liked = data.filter((item) => item.like).length;\n        const allPosts = data.length;\n        const visiblePosts = this.filterPost(this.searchPost(data, term), filter);\n        return (\n            <div className=\"app\">\n                <AppHeader liked={liked} allPosts={allPosts}/>\n                <div className=\"search-panel d-flex\">\n                    <SearchPanel\n                        onUpdateSearch={this.onUpdateSearch}/>\n                    <PostStatusFilter\n                        filter={filter}\n                        onFilterSelect={this.onFilterSelect}/>\n                </div>\n                <PostList \n                posts={visiblePosts}\n                onDelete={this.deleteItem}\n                onToggleImportant={this.onToggleImportant}\n                onToggleLiked={this.onToggleLiked}/>\n                <PostAddForm\n                onAdd={this.addItem}/>\n            </div>\n         )\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './components/app/';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}